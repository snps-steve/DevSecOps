{{- $ns := default .Release.Namespace .Values.target.namespace -}}
{{- $selector := default "app=blackduck" .Values.target.labelSelector -}}
{{- $annoKey := default "blackduck.synopsys.com/policy" .Values.target.annotateKey -}}
{{- $annoVal := default "pass" .Values.target.annotateValueOnPass -}}

{{- $annotate := false -}}
{{- if hasKey .Values "target" }}{{- if hasKey .Values.target "annotateWorkloads" }}{{- $annotate = .Values.target.annotateWorkloads }}{{- end }}{{- end -}}
{{- $trust := true -}}
{{- if hasKey .Values "blackduck" }}{{- if hasKey .Values.blackduck "trustCert" }}{{- $trust = .Values.blackduck.trustCert }}{{- end }}{{- end -}}

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "selfscan.name" . }}-{{ now | date "20060102-150405" }}
  namespace: {{ $ns }}
  labels:
    app.kubernetes.io/name: {{ include "selfscan.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  backoffLimit: 2
  ttlSecondsAfterFinished: 3600  # Clean up after 1 hour
  template:
    spec:
      serviceAccountName: {{ include "selfscan.sa" . }}
      restartPolicy: Never
      volumes:
        - name: script
          configMap:
            name: {{ include "selfscan.name" . }}-script
            defaultMode: 0555
        {{- if .Values.registry.secretName }}
        - name: registry-creds
          secret:
            secretName: {{ .Values.registry.secretName }}
        {{- end }}
        # Docker socket for Container Scanner
        - name: docker-socket
          hostPath:
            path: /var/run/docker.sock
            type: Socket
      containers:
        - name: scanner
          image: {{ default "alpine:3.19" .Values.runner.image | quote }}
          securityContext:
            privileged: true  # Required for docker socket access
          volumeMounts:
            - name: script
              mountPath: /opt/selfscan
              readOnly: true
            {{- if .Values.registry.secretName }}
            - name: registry-creds
              mountPath: /tmp/registry-creds
              readOnly: true
            {{- end }}
            - name: docker-socket
              mountPath: /var/run/docker.sock
          env:
            - name: BD_URL
              valueFrom:
                secretKeyRef:
                  name: {{ default "blackduck-creds" .Values.blackduck.tokenSecretName | quote }}
                  key: url
            - name: BD_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ default "blackduck-creds" .Values.blackduck.tokenSecretName | quote }}
                  key: token
            - name: TARGET_NS
              value: {{ $ns | quote }}
            - name: LABEL_SELECTOR
              value: {{ $selector | quote }}
            - name: ANNOTATE_WORKLOADS
              value: {{ ternary "true" "false" $annotate | quote }}
            - name: ANNO_KEY
              value: {{ $annoKey | quote }}
            - name: ANNO_VALUE
              value: {{ $annoVal | quote }}
            - name: POLICY_FAIL_SEVERITIES
              value: {{ default "CRITICAL,BLOCKER" .Values.detect.policyFailSeverities | quote }}
            - name: TRUST_CERT
              value: {{ ternary "true" "false" $trust | quote }}
            - name: DETECT_PARENT_PROJECT
              value: {{ default "" .Values.detect.parentProject | quote }}
            - name: DETECT_PARENT_VERSION
              value: {{ default "" .Values.detect.parentVersion | quote }}
            - name: PROJECT_GROUP
              value: {{ default "" .Values.detect.projectGroupName | quote }}
            {{- if .Values.registry.secretName }}
            - name: REGISTRY_SECRET_PATH
              value: "/tmp/registry-creds"
            {{- end }}
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "2Gi"
              cpu: "1"
          command:
            - /bin/sh
            - -c
            - exec /opt/selfscan/scan.sh
