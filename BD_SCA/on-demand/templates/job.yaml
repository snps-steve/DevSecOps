{{- $ns := default .Release.Namespace .Values.target.namespace -}}
{{- $selector := default "app=blackduck" .Values.target.labelSelector -}}
{{- $annoKey := default "blackduck.synopsys.com/policy" .Values.target.annotateKey -}}
{{- $annoVal := default "pass" .Values.target.annotateValueOnPass -}}

{{- $annotate := false -}}
{{- if hasKey .Values "target" }}{{- if hasKey .Values.target "annotateWorkloads" }}{{- $annotate = .Values.target.annotateWorkloads }}{{- end }}{{- end -}}
{{- $trust := true -}}
{{- if hasKey .Values "blackduck" }}{{- if hasKey .Values.blackduck "trustCert" }}{{- $trust = .Values.blackduck.trustCert }}{{- end }}{{- end -}}

{{- /* Enhanced resource configuration with backward compatibility */ -}}
{{- $memoryRequest := "2Gi" -}}
{{- $cpuRequest := "500m" -}}
{{- $memoryLimit := "8Gi" -}}
{{- $cpuLimit := "4" -}}
{{- $ephemeralStorageLimit := "50Gi" -}}

{{- /* Check for enhanced runner.resources structure */ -}}
{{- if .Values.runner -}}
{{-   if .Values.runner.resources -}}
{{-     if .Values.runner.resources.requests -}}
{{-       $memoryRequest = default $memoryRequest .Values.runner.resources.requests.memory -}}
{{-       $cpuRequest = default $cpuRequest .Values.runner.resources.requests.cpu -}}
{{-     end -}}
{{-     if .Values.runner.resources.limits -}}
{{-       $memoryLimit = default $memoryLimit .Values.runner.resources.limits.memory -}}
{{-       $cpuLimit = default $cpuLimit .Values.runner.resources.limits.cpu -}}
{{-       $ephemeralStorageLimit = default $ephemeralStorageLimit .Values.runner.resources.limits.ephemeralStorage -}}
{{-     end -}}
{{-   end -}}
{{- end -}}

apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "selfscan.name" . }}-{{ now | date "20060102-150405" }}
  namespace: {{ $ns }}
  labels:
    app.kubernetes.io/name: {{ include "selfscan.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: scanner
    app.kubernetes.io/part-of: blackduck-selfscan
spec:
  backoffLimit: 2
  ttlSecondsAfterFinished: 3600
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "selfscan.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: scanner
    spec:
      serviceAccountName: {{ include "selfscan.sa" . }}
      restartPolicy: Never
      volumes:
        - name: script
          configMap:
            name: {{ include "selfscan.name" . }}-script
            defaultMode: 0555
        {{- if .Values.registry.secretName }}
        - name: registry-creds
          secret:
            secretName: {{ .Values.registry.secretName }}
        {{- end }}
        # Temporary storage for container image downloads
        - name: temp-storage
          emptyDir:
            sizeLimit: {{ $ephemeralStorageLimit | quote }}
        # Additional temp space for Synopsys Detect
        - name: detect-temp
          emptyDir:
            sizeLimit: "10Gi"
      containers:
        - name: scanner
          image: {{ default "alpine:3.19" .Values.runner.image | quote }}
          # MicroK8s-friendly: No privileged mode needed for BDSC Container Scanning
          securityContext:
            runAsNonRoot: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            capabilities:
              drop:
                - ALL
            # Run as a specific user for better security
            runAsUser: 1001
            runAsGroup: 1001
          volumeMounts:
            - name: script
              mountPath: /opt/selfscan
              readOnly: true
            - name: temp-storage
              mountPath: /tmp/container-images
            - name: detect-temp
              mountPath: /tmp/detect
            {{- if .Values.registry.secretName }}
            - name: registry-creds
              mountPath: /tmp/registry-creds
              readOnly: true
            {{- end }}
          env:
            - name: BD_URL
              valueFrom:
                secretKeyRef:
                  name: {{ default "blackduck-creds" .Values.blackduck.tokenSecretName | quote }}
                  key: url
            - name: BD_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ default "blackduck-creds" .Values.blackduck.tokenSecretName | quote }}
                  key: token
            - name: TARGET_NS
              value: {{ $ns | quote }}
            - name: LABEL_SELECTOR
              value: {{ $selector | quote }}
            - name: ANNOTATE_WORKLOADS
              value: {{ ternary "true" "false" $annotate | quote }}
            - name: ANNO_KEY
              value: {{ $annoKey | quote }}
            - name: ANNO_VALUE
              value: {{ $annoVal | quote }}
            - name: POLICY_FAIL_SEVERITIES
              value: {{ default "CRITICAL,BLOCKER" .Values.detect.policyFailSeverities | quote }}
            - name: TRUST_CERT
              value: {{ ternary "true" "false" $trust | quote }}
            - name: DETECT_PARENT_PROJECT
              value: {{ default "" .Values.detect.parentProject | quote }}
            - name: DETECT_PARENT_VERSION
              value: {{ default "" .Values.detect.parentVersion | quote }}
            - name: PROJECT_GROUP
              value: {{ default "" .Values.detect.projectGroupName | quote }}
            - name: PROJECT_TIER
              value: {{ default "3" .Values.detect.projectTier | quote }}
            # Enhanced environment variables for debugging and configuration
            - name: DEBUG_ENABLED
              value: {{ ternary "true" "false" (default false .Values.debug.enabled) | quote }}
            - name: LOG_LEVEL
              value: {{ default "INFO" .Values.debug.logLevel | quote }}
            - name: KEEP_TEMP_FILES
              value: {{ ternary "true" "false" (default false .Values.debug.keepTempFiles) | quote }}
            # Java options for Synopsys Detect
            - name: JAVA_OPTS
              value: "-Xmx2g -Xms512m"
            - name: DETECT_TEMP_DIR
              value: "/tmp/detect"
            {{- if .Values.registry.secretName }}
            - name: REGISTRY_SECRET_PATH
              value: "/tmp/registry-creds"
            {{- end }}
            # Additional timeout and retry settings
            - name: IMAGE_DOWNLOAD_TIMEOUT
              value: "600"  # 10 minutes
            - name: IMAGE_DOWNLOAD_RETRIES
              value: "3"
            - name: SCAN_TIMEOUT
              value: "1800"  # 30 minutes per scan
          resources:
            requests:
              memory: {{ $memoryRequest | quote }}
              cpu: {{ $cpuRequest | quote }}
            limits:
              memory: {{ $memoryLimit | quote }}
              cpu: {{ $cpuLimit | quote }}
              ephemeral-storage: {{ $ephemeralStorageLimit | quote }}
          # Health checks to monitor scanning progress
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - "ps aux | grep -v grep | grep -q 'bdsc-container-scan.sh'"
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 10
            failureThreshold: 10  # Allow for long-running scans
          # Startup probe with longer timeout for initial setup
          startupProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - "test -f /tmp/.scanner-started || (touch /tmp/.scanner-started && exit 0)"
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 12  # 1 minute total startup time
          command:
            - /bin/sh
            - -c
            - |
              # Create startup indicator
              touch /tmp/.scanner-started
              
              # Set up user permissions for non-root execution
              mkdir -p /tmp/container-images /tmp/detect
              chown 1001:1001 /tmp/container-images /tmp/detect 2>/dev/null || true
              
              # Execute the scanning script
              exec /opt/selfscan/bdsc-container-scan.sh
      # Node selection and tolerations for better scheduling
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
