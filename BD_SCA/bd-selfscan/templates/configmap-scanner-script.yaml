apiVersion: v1
kind: ConfigMap  
metadata:
  name: {{ include "bd-selfscan.name" . }}-scanner-scripts
  namespace: {{ .Values.global.namespace }}
data:
  scan-application.sh: |
    #!/bin/bash
    set -euo pipefail
    
    # Usage: ./scan-application.sh <app-name> [<namespace>] [<labelSelector>] [<projectGroup>]
    
    APP_NAME="${1:-}"
    NAMESPACE="${2:-}"
    LABEL_SELECTOR="${3:-}"
    PROJECT_GROUP="${4:-}"
    
    if [ -z "$APP_NAME" ]; then
      echo "Usage: $0 <app-name> [namespace] [labelSelector] [projectGroup]"
      echo "Or set APP_NAME environment variable"
      exit 1
    fi
    
    # If parameters not provided, try to load from config
    if [ -z "$NAMESPACE" ] || [ -z "$LABEL_SELECTOR" ] || [ -z "$PROJECT_GROUP" ]; then
      echo "Loading configuration for application: $APP_NAME"
      
      # Parse applications.yaml to get config for this app
      CONFIG=$(yq e ".applications[] | select(.name == \"$APP_NAME\")" /config/applications.yaml)
      
      if [ -z "$CONFIG" ]; then
        echo "Error: Application '$APP_NAME' not found in configuration"
        exit 1
      fi
      
      NAMESPACE=$(echo "$CONFIG" | yq e '.namespace' -)
      LABEL_SELECTOR=$(echo "$CONFIG" | yq e '.labelSelector' -)
      PROJECT_GROUP=$(echo "$CONFIG" | yq e '.projectGroup' -)
      PROJECT_TIER=$(echo "$CONFIG" | yq e '.projectTier // 3' -)
    fi
    
    echo "=== Scanning Application: $APP_NAME ==="
    echo "Namespace: $NAMESPACE"
    echo "Label Selector: $LABEL_SELECTOR"
    echo "Project Group: $PROJECT_GROUP"
    echo "Project Tier: $PROJECT_TIER"
    echo ""
    
    # Call the main BDSC container scanning logic
    export TARGET_NS="$NAMESPACE"
    export LABEL_SELECTOR="$LABEL_SELECTOR"
    export DESIRED_PROJECT_GROUP="$PROJECT_GROUP"
    export PROJECT_TIER="$PROJECT_TIER"
    
    exec /scripts/bdsc-container-scan.sh
    
  scan-all-applications.sh: |
    #!/bin/bash
    set -euo pipefail
    
    echo "=== Scanning All Configured Applications ==="
    
    # Get list of all applications from config
    APPS=$(yq e '.applications[].name' /config/applications.yaml)
    
    TOTAL_APPS=$(echo "$APPS" | wc -l)
    CURRENT=0
    SUCCESS=0
    FAILED=0
    
    echo "Found $TOTAL_APPS applications to scan"
    echo ""
    
    for APP in $APPS; do
      CURRENT=$((CURRENT + 1))
      echo "[$CURRENT/$TOTAL_APPS] Processing: $APP"
      
      if /scripts/scan-application.sh "$APP"; then
        echo "✓ SUCCESS: $APP"
        SUCCESS=$((SUCCESS + 1))
      else
        echo "✗ FAILED: $APP"
        FAILED=$((FAILED + 1))
      fi
      echo ""
    done
    
    echo "=== Scanning Summary ==="
    echo "Total: $TOTAL_APPS"
    echo "Success: $SUCCESS"
    echo "Failed: $FAILED"
    
    if [ $FAILED -gt 0 ]; then
      echo "Some scans failed. Check logs above."
      exit 1
    fi
    
  bdsc-container-scan.sh: |
    # Your existing BDSC container scanning logic here
    # but modified to use environment variables set by scan-application.sh
    # ... (keep most of your existing script logic) ...